# baseURI: http://topbraid.org/examples/shaclsquare
# imports: http://www.w3.org/ns/shacl

# An example SHACL model about rectangles and squares, demonstrating all major
# features of SHACL with simple examples.

# Contact: Holger Knublauch (holger@topquadrant.com)

@prefix arg: <http://www.w3.org/ns/shacl/arg#> .
@prefix ex: <http://topbraid.org/examples/shaclsquare#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix schema: <http://schema.org/>
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .


# The sh:Graph ----------------------------------------------------------------

<http://topbraid.org/examples/shaclsquare>
	a sh:Graph ;
	sh:shapesGraph <http://www.w3.org/ns/shacl> ;
	rdfs:label "SHACL Square Example" ;
	rdfs:comment "A simple example model demonstrating some key features of SHACL. Have a look at the ex:computeArea function, the rule attached to ex:Rectangle and the constraint attached to ex:Square." ;
.

# Classes ---------------------------------------------------------------------

ex:Rectangle
	a sh:ShapeClass ;
	rdfs:subClassOf rdfs:Resource ;
	rdfs:label "Rectangle" ;
	sh:rule [
		rdfs:label "Infer area of ?this" ;
		sh:sparql """
			CONSTRUCT {
				?this ex:area ?area .
			}
			WHERE {
				?this ex:width ?width .
				?this ex:height ?height .
				BIND (?width * ?height AS ?area) .
			}
			"""
	] ;
	sh:rule [
		rdfs:label "adding second height attribute" ;
		sh:sparql """
			CONSTRUCT {
				?this ex:height 4 .
			}
			WHERE {
				?this ex:width ?width .
				?this ex:height ?height .
			}
			"""
	] ;
	sh:property [
		sh:predicate ex:height ;
		sh:datatype xsd:integer ;
		rdfs:label "check height" ;
		sh:minCount 1 ;
		sh:maxCount 1 ;
		rdfs:comment "The height of the Rectangle." ;
	] ;
	sh:property [
		sh:predicate ex:width ;
		sh:datatype xsd:integer ;
		rdfs:label "check width" ;
		sh:minCount 1 ;
		sh:maxCount 1 ;
		rdfs:comment "The width of the Rectangle." ;
	] ;
	sh:property [
		sh:predicate ex:area ;
		sh:datatype xsd:integer ;
		sh:minCount 1 ;
		rdfs:label "mincount area" ;
		rdfs:comment "The area of the Rectangle." ;
	] ;
.

ex:Square
	a sh:ShapeClass ;
	rdfs:label "Square" ;
	rdfs:subClassOf ex:Rectangle ;
	sh:constraint [
		sh:message "Width and height of a Square must be equal" ;
		sh:predicate ex:width ;
		sh:sparql """
			SELECT ?this (?this AS ?subject) (?width AS ?object)
			WHERE {
				?this ex:width ?width .
				?this ex:height ?height .
				FILTER (?width != ?height) .
			}
			""" ;
	] ;
.

schema:Person
	a sh:ShapeClass ;
	rdfs:label "Person" ;
	rdfs:subClassOf rdfs:Resource ;
	sh:property [
		sh:predicate schema:email ;
		sh:datatype xsd:string ;
		rdfs:label "email" ;
		rdfs:comment "Zero or more email addresses of the person." ;
	] ;
.

  
# Example Instances -----------------------------------------------------------
  
ex:InvalidSquare
	a ex:Square ;
	ex:height 8 ;
	ex:width 9 ;
	rdfs:label "Invalid square" ;
.
  
ex:TestRectangle
	a ex:Rectangle ;
	ex:creator ex:PersonWithEmail ;
	ex:height 6 ;
	ex:width 7 ;
	rdfs:label "Test rectangle" ;
.

ex:PersonWithEmail
	a schema:Person ;
	schema:email 1 ;
.